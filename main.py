import sys
from PyQt6 import QtWidgets, uic
from PyQt6 import QtWidgets, QtGui
from src.ai_requests import AI
from src.sql.db_api import DB

class MyApp(QtWidgets.QMainWindow):
    def __init__(self):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        """
        super(MyApp, self).__init__()
        uic.loadUi('main.ui', self)

        self.load_connections()
        self.load_ui()

        self.ai = AI()
        self.db = DB()

        self.ai_mode = self.ai.QA
        self.ai_chat_context = []

    def load_connections(self):
        """
        –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –∫ –∏—Ö —Ö–µ–Ω–¥–ª–µ—Ä–∞–º
        """
        self.open_file.clicked.connect(self.handler_load_file)
        self.ai_send_button.clicked.connect(self.handler_ai_send)
        self.main_text.selectionChanged.connect(self.handler_select_text)

    def load_ui(self):
        """
        –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        """
        self.ai_history.setReadOnly(True)
        self.selected_text = ""  

    def ai_analysis(self):
        """
        –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–µ–π—Ä–æ–Ω–∫–æ–π —Ç–µ–∫—Å—Ç
        """
        out = False
        if self.ai_mode == self.ai.QA:
            if len(self.ai_request.toPlainText()) == 0:
                return False
            if len(self.main_text.toPlainText()) == 0:
                return False
            
            out = self.ai.question_answering(self.ai_request.toPlainText(), self.main_text.toPlainText())
        elif self.ai_mode == self.ai.SUMMARING:
            if len(self.selected_text) == 0:
                return False
            
            try:
                out = self.ai.summaring(self.selected_text, int(self.ai_request.toPlainText()))
            except (ValueError) as e:
                out = self.ai.summaring(self.selected_text)

        return f"[ü§ñ] {out}"
    
    def change_ai_mode(self):
        """
        –ú–µ–Ω—è–µ—Ç —Ä–µ–∂–∏–º, –≤ –∫–æ—Ç–æ—Ä–æ–º —â–∞—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –ò–ò
        (–ø–æ —Ñ–∞–∫—Ç—É –º–µ–Ω—è–µ—Ç –Ω–µ–π—Ä–æ–Ω–∫—É, –∫–æ—Ç–æ—Ä–∞—è —â–∞—Å –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å)
        """
        request = self.ai_request.toPlainText().strip()
        
        if request.isnumeric():
            self.ai_mode = self.ai.SUMMARING
            return
        if len(request) == 0:
            self.ai_mode = self.ai.SUMMARING
            return
        
        self.ai_mode = self.ai.QA

    def add_to_history(self, *texts):
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ —Å –Ω–µ–π—Ä–æ–Ω–∫–æ–π
        """
        for text in texts:
            self.ai_chat_context.append(text)
        self.ai_history.setPlainText('\n'.join(self.ai_chat_context))

    def move_cursor_down(self, t):
        """
        –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç –¥–æ –Ω–∏–∑–∞ –º–µ–Ω—é—à–∫—É
        """
        cursor = QtGui.QTextCursor(t.document())
        cursor.movePosition(QtGui.QTextCursor.MoveOperation.End)
        t.setTextCursor(cursor)

    def handler_select_text(self):
        """
        –ù–∞–∑–Ω–∞—á–∞–µ—Ç –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        """
        self.selected_text = self.main_text.textCursor().selectedText()

    def handler_load_file(self):
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏
        """
        file_path, _ = QtWidgets.QFileDialog.getOpenFileName(
            self,
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª",
            "",
            "Text Files (*.txt);;All Files (*)"
        )
        
        if file_path:
            with open(file_path, 'r', encoding='utf-8') as file:
                text = file.read()
                self.main_text.setPlainText(text)
                self.db.add_file(file_path)

    def handler_ai_send(self):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ –Ω–µ–π—Ä–æ–Ω–∫—É —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        self.change_ai_mode()

        print(self.ai_mode)
        out = self.ai_analysis()

        if out:
            request = f"[üë§] {self.ai_request.toPlainText()}"
            self.add_to_history(request, out)
            self.ai_request.setPlainText('')
            self.move_cursor_down(self.ai_history)


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    window = MyApp()
    window.show()
    sys.exit(app.exec())
