from PyQt6 import QtWidgets
from datetime import datetime as dt
from os import path as op
from src.sql.db_tables import recent_files


class Handlers:
    def __init__(self, app):
        self.app = app

    def handler_text_changed(self):
        """ 
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫, –≤—ã–∑—ã–≤–∞–µ–º—ã–π –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤
        —Ñ–∞–π–ª–µ. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ —Ç–æ, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ
        —Ç–µ–∫—Å—Ç–∞ –Ω–µ –±—ã–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. 
        """ 
        self.app.if_main_text_data_saved = False

    def handler_select_text(self):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫, –Ω–∞–∑–Ω–∞—á–∞—é—â–∏–π –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤
        –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
        –≤ –∞—Ç—Ä–∏–±—É—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. 
        """
        self.app.selected_text = self.app.main_text.textCursor().selectedText()

    def handler_load_file(self):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏. –û—Ç–∫—Ä—ã–≤–∞–µ—Ç
        –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞. 
        """
        file_path, _ = QtWidgets.QFileDialog.getOpenFileName(
            self.app,
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª",
            "",
            "Text Files (*.txt);;All Files (*)"
        )

        if file_path:
            time_create = dt.fromtimestamp(op.getctime(file_path))
            time_edit = dt.fromtimestamp(op.getmtime(file_path))
            self.handler_save_data()
            file = self.app.db.files.get(
                path=file_path,
                time_create=time_create,
                time_edit=time_edit)
            if file:
                self.app.file = file
            else:
                self.app.file = recent_files()
                self.app.file.path = file_path
                self.app.file.time_create = dt.fromtimestamp(
                    op.getctime(file_path))
                self.app.file.time_edit = dt.fromtimestamp(
                    op.getmtime(file_path))

            self.app.refresh_main_text()
            self.app.refresh_ai_history()

    def handler_save_file(self):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ —Ñ–∞–π–ª–∞. –ï—Å–ª–∏ —Ñ–∞–π–ª —É–∂–µ –±—ã–ª
        –∑–∞–≥—Ä—É–∂–µ–Ω, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç
        –¥–∏–∞–ª–æ–≥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞. 
        """
        file_path = self.app.file.path

        if file_path:
            with open(file_path, 'w', encoding='utf-8') as file:
                file.write(self.app.main_text.toPlainText())
                self.app.if_main_text_data_saved = True
                file.close()
                self.handler_save_data()
        else:
            file_path, _ = QtWidgets.QFileDialog.getSaveFileName(
                self.app, "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª", "",
                "All Files (*);;Text Files (*.txt)")
            with open(file_path, 'w') as file:
                file.write(self.app.main_text.toPlainText())

    def handler_save_data(self):
        """
        –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ –±–¥, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –±—ã–ª
        —Å–æ—Ö—Ä–∞–Ω—ë–Ω. –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç
        –∏–ª–∏ —É–¥–∞–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è. 
        """
        file = self.app.file
        if file.path is None:
            return

        file.time_edit = dt.fromtimestamp(op.getmtime(file.path))
        if not self.app.if_main_text_data_saved:
            if not file.id_unsave_data:
                unsave_data = self.app.db.unsave.add(
                    self.app.main_text.toPlainText())
                requests_history = self.app.db.requests.add(
                    self.app.ai_history.toPlainText())

                file.id_unsave_data = unsave_data.id
                file.id_requests_history = requests_history.id
            else:
                unsave_data = self.app.db.unsave.get_by_id(
                    self.app.file.id_unsave_data)
                requests_history = self.app.db.requests.get_by_id(
                    self.app.file.id_requests_history)

                unsave_data.text = self.app.main_text.toPlainText()
                requests_history.text = self.app.ai_history.toPlainText()
        else:
            if file:
                if file.id_unsave_data:
                    self.app.db.unsave.delete_by_id(file.id_unsave_data)
                    print("—É–¥–∞–ª–µ–Ω–∏–µ unsave data")
                if file.id_requests_history:
                    self.app.db.requests.delete_by_id(file.id_requests_history)
                    print("–∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –∏–∑ –±–¥")
                self.app.db.files.delete(id=file.id)
                print("—É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑ –±–¥")
                self.app.db.session.commit()
                return
        self.app.db.session.add(file)
        self.app.db.session.commit()

    def handler_ai_send(self):
        """
        –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –ò–ò, –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∞–Ω–∞–ª–∏–∑ –Ω–∞ –æ—Å–Ω–æ–≤–µ 
        –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ç–µ–∫—Å—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∏—Å—Ç–æ—Ä–∏–∏. 
        –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞ –æ—á–∏—â–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞ 
        –∏ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç –∫—É—Ä—Å–æ—Ä –≤ –æ–±–ª–∞—Å—Ç–∏ –∏—Å—Ç–æ—Ä–∏–∏.
        """
        self.app.change_ai_mode()

        print(self.app.ai_mode)
        out = self.app.ai_analysis()

        if out:
            request = f"[üë§] {self.app.ai_request.toPlainText()}"
            self.app.add_to_history(request, out)
            self.app.ai_request.setPlainText('')
            self.app.move_cursor_down(self.app.ai_history)
