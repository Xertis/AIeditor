from PyQt6 import QtWidgets
from datetime import datetime as dt
from os import path as op

class Handlers:

    def __init__(self, app):
        self.app = app

    def handler_text_changed(self):
        """
        –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
        """
        self.app.if_main_text_data_saved = False

    def handler_select_text(self):
        """
        –ù–∞–∑–Ω–∞—á–∞–µ—Ç –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        """
        self.app.selected_text = self.app.main_text.textCursor().selectedText()

    def handler_load_file(self):
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏
        """
        file_path, _ = QtWidgets.QFileDialog.getOpenFileName(
            self.app,
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª",
            "",
            "Text Files (*.txt);;All Files (*)"
        )
        time_create = dt.fromtimestamp(op.getctime(file_path))
        time_edit = dt.fromtimestamp(op.getmtime(file_path))
        file = self.app.db.get_file(path=file_path, time_create=time_create, time_edit=time_edit)
        if file:
            self.app.file = file
        else:
            self.app.file.path = file_path
            self.app.file.time_create = dt.fromtimestamp(op.getctime(file_path))
            self.app.file.time_edit = dt.fromtimestamp(op.getmtime(file_path))

        self.app.refresh_main_text()

    def handler_save_file(self):
        """
        –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã–π —Ñ–∞–π–ª
        """
        file_path = self.app.file.path

        if file_path:
            with open(file_path, 'w', encoding='utf-8') as file:
                file.write(self.app.main_text.toPlainText())
                self.app.if_main_text_data_saved = True
                file.close()
                self.handler_save_data()

    def handler_save_data(self):
        """
        –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –±—ã–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω
        """
        if not self.app.if_main_text_data_saved:
            unsave_data = self.app.db.add_unsave_data(self.app.main_text.toPlainText())
            requests_history = self.app.db.add_requests_history(self.app.ai_history.toPlainText())

            self.app.file.id_unsave_data = unsave_data.id
            self.app.file.id_requests_history = requests_history.id

            self.app.db.session.add(self.app.file)
            self.app.db.session.commit()
        else:
            file = self.app.db.get_file_by_path(path=self.app.file.path)
            
            if file:
                if file.id_unsave_data:
                    self.app.db.delete_unsave_data_by_id(file.id_unsave_data)
                    print("—É–¥–∞–ª–µ–Ω–∏–µ unsave data")
                if file.id_requests_history:
                    self.app.db.delete_requests_history_by_id(file.id_requests_history)
                    print("–∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –∏–∑ –±–¥")
                self.app.db.delete_file(id=file.id)
                print("—É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑ –±–¥")

    def handler_ai_send(self):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ –Ω–µ–π—Ä–æ–Ω–∫—É —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        self.app.change_ai_mode()

        print(self.app.ai_mode)
        out = self.app.ai_analysis()

        if out:
            request = f"[üë§] {self.app.ai_request.toPlainText()}"
            self.app.add_to_history(request, out)
            self.app.ai_request.setPlainText('')
            self.app.move_cursor_down(self.app.ai_history)